"""First

Revision ID: 0b3cf506fc43
Revises: 
Create Date: 2022-06-05 21:25:30.941236

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "0b3cf506fc43"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cpes",
        sa.Column("cpe_id", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("cpe_id"),
    )
    op.create_index(op.f("ix_cpes_cpe_id"), "cpes", ["cpe_id"], unique=False)
    op.create_table(
        "cves",
        sa.Column("cve_id", sa.String(), nullable=False),
        sa.Column("severity", sa.String(), nullable=False),
        sa.Column("version", sa.String(), nullable=False),
        sa.Column("score", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("cve_id"),
    )
    op.create_index(op.f("ix_cves_score"), "cves", ["score"], unique=False)
    op.create_table(
        "app_bundles",
        sa.Column("application_name", sa.String(), nullable=False),
        sa.Column("version", sa.String(), nullable=False),
        sa.Column("bundle_version", sa.String(), nullable=False),
        sa.Column("obtained_from", sa.String(), nullable=False),
        sa.Column("bundle_identifier", sa.String(), nullable=False),
        sa.Column("process_name", sa.String(), nullable=False),
        sa.Column("path", sa.String(), nullable=False),
        sa.Column("cpe_row_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["cpe_row_id"], ["cpes.cpe_id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("bundle_version", "bundle_identifier"),
    )
    op.create_table(
        "cpe_cve_match",
        sa.Column("cpe_row_id", sa.String(), nullable=False),
        sa.Column("cve_row_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["cpe_row_id"], ["cpes.cpe_id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["cve_row_id"], ["cves.cve_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("cpe_row_id", "cve_row_id"),
    )
    op.create_index(
        op.f("ix_cpe_cve_match_cpe_row_id"),
        "cpe_cve_match",
        ["cpe_row_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_cpe_cve_match_cve_row_id"),
        "cpe_cve_match",
        ["cve_row_id"],
        unique=False,
    )
    op.create_table(
        "device_app_info",
        sa.Column(
            "id", sa.Integer(), sa.Identity(always=True, start=1), nullable=False
        ),
        sa.Column("tenant_id", sa.String(length=100), nullable=False),
        sa.Column("device_id", sa.String(length=128), nullable=False),
        sa.Column("app_bundle_version", sa.String(), nullable=False),
        sa.Column("app_bundle_identifier", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["app_bundle_version", "app_bundle_identifier"],
            ["app_bundles.bundle_version", "app_bundles.bundle_identifier"],
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_device_app_info_device_id"),
        "device_app_info",
        ["device_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_device_app_info_tenant_id"),
        "device_app_info",
        ["tenant_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_device_app_info_tenant_id"), table_name="device_app_info")
    op.drop_index(op.f("ix_device_app_info_device_id"), table_name="device_app_info")
    op.drop_table("device_app_info")
    op.drop_index(op.f("ix_cpe_cve_match_cve_row_id"), table_name="cpe_cve_match")
    op.drop_index(op.f("ix_cpe_cve_match_cpe_row_id"), table_name="cpe_cve_match")
    op.drop_table("cpe_cve_match")
    op.drop_table("app_bundles")
    op.drop_index(op.f("ix_cves_score"), table_name="cves")
    op.drop_table("cves")
    op.drop_index(op.f("ix_cpes_cpe_id"), table_name="cpes")
    op.drop_table("cpes")
    # ### end Alembic commands ###
