from sqlalchemy import Column, ForeignKeyConstraint
from sqlalchemy import Integer
from sqlalchemy import String
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.schema import ForeignKey
from sqlalchemy.schema import Identity

Base = declarative_base()


# Table to map devices to which bundles they have installed
class DeviceOrm(Base):
    __tablename__ = "device_app_info"
    __table_args__ = (
        ForeignKeyConstraint(
            ["app_bundle_version", "app_bundle_identifier"], ["app_bundles.bundle_version", "app_bundles"
                                                                                            ".bundle_identifier"],
            ondelete="CASCADE"
        ),
    )

    id = Column(
        Integer, Identity(always=True, start=1), primary_key=True, nullable=False
    )
    tenant_id = Column(String(100), index=True, nullable=False)
    device_id = Column(String(128), index=True, nullable=False)
    app_bundle_version = Column(String, nullable=False)
    app_bundle_identifier = Column(String, nullable=False)


# Table that keeps track of seen application bundles the agent sends info on and what CPEs those bundles correspond to
class AppBundleOrm(Base):
    __tablename__ = "app_bundles"
    application_name = Column(String, nullable=False)
    version = Column(String, nullable=False)
    bundle_version = Column(String, nullable=False, primary_key=True)
    obtained_from = Column(String, nullable=False)
    bundle_identifier = Column(String, nullable=False, primary_key=True)
    process_name = Column(String, nullable=False)
    path = Column(String, nullable=False)
    cpe_row_id = Column(ForeignKey("cpes.cpe_id", ondelete="SET NULL"), nullable=True)


# Table that keeps track of CPEs
class CPEOrm(Base):
    __tablename__ = "cpes"
    cpe_id = Column(String, index=True, primary_key=True, nullable=False)


# Table that keeps track of which CPEs are associated with which CVEs
class CPECVEMatchOrm(Base):
    __tablename__ = "cpe_cve_match"
    cpe_row_id = Column(ForeignKey("cpes.cpe_id", ondelete="CASCADE"), nullable=False, primary_key=True, index=True)
    cve_row_id = Column(ForeignKey("cves.cve_id", ondelete="CASCADE"), nullable=False, primary_key=True, index=True)


# Table that keeps track of CVEs
class CVEOrm(Base):
    __tablename__ = "cves"
    cve_id = Column(String, primary_key=True, nullable=False)
    severity = Column(String, nullable=False)
    version = Column(String, nullable=False)
    score = Column(String, index=True, nullable=False)
