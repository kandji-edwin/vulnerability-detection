FROM python:3.9.9-slim as base
WORKDIR /app

ARG local_user

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    POETRY_VERSION=1.1.8 \
    POETRY_HOME="/opt/poetry" \
    POETRY_NO_INTERACTION=1 \
    LOCAL_USER=$local_user

ENV PATH="$POETRY_HOME/bin:$PATH"

ADD pyproject.toml poetry.lock /app/
RUN mkdir /app/vendor
ADD vendor/* /app/vendor

RUN \
    # apt-get installs
    apt-get update && \
    apt-get install -y --no-install-recommends gcc libc6-dev make curl && \
    apt-get install -y cmake && \
    apt-get install -y cron && \
    apt-get install -y g++ && \
    apt-get install -y libpq-dev && \
    ### install poetry and dependencies
    curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python - && \
    chmod a+x /opt/poetry/bin/poetry && \
    poetry config virtualenvs.create false && \
    poetry install

### clean apt-get dependencies
RUN apt-get remove -y --auto-remove gcc libc6-dev curl && \
    apt-get purge -y --auto-remove gcc libc6-dev curl && \
    apt-get clean autoclean && \
    apt-get autoremove --yes && \
    rm -rf /var/lib/{apt,dpkg,cache,log}/ && \
    rm -rf /root/.cache

COPY validation_service/* /app
COPY detection_service/models.py /app/models.py
COPY poetry.lock /app/poetry.lock
COPY pyproject.toml /app/pyproject.toml

FROM base as validation-service
