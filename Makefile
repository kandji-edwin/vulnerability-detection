POETRY ?= poetry
ROOT_DIR:=$(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))

PROTOBUF_DIR:=$(ROOT_DIR)/protobuf
PROTOBUF_BUILD_DIR:=$(PROTOBUF_DIR)/.build
protobuf-build:
	@rm -rf protobuf/ && \
	cp -r $(ROOT_DIR)/kandji-types/protobuf $(PROTOBUF_DIR) && \
	echo "\nBuilding protobufs..." && \
	mkdir -p $(PROTOBUF_BUILD_DIR)
	@for protobuf in `find $(PROTOBUF_DIR) -type f -name "*.proto"`; do \
		echo "\t$${protobuf}"; \
		(python3 -m grpc_tools.protoc -I $(ROOT_DIR) --grpc_python_out=$(PROTOBUF_BUILD_DIR) --python_out=$(PROTOBUF_BUILD_DIR) $${protobuf} 2>/dev/null || \
		echo "\tCould not generate files for $${protobuf}"); \
  	done && \
	echo "\nCopying files..." && \
	for f in `find $(ROOT_DIR) -type f -name "grpc_requirements"`; do \
  		for name in `cat $${f}`; do \
  			mkdir -p $${f%/*}/protobuf/$$(echo $${name%/*}/ | tr - _); \
  			echo "\t$${name} --> $${f%/*}/protobuf/$$name/"; \
  			cp  $(PROTOBUF_BUILD_DIR)/protobuf/$$(echo $${name} | tr - _)_pb2.py $${f%/*}/protobuf/$$(echo $${name%/*}/ | tr - _); \
  			cp  $(PROTOBUF_BUILD_DIR)/protobuf/$$(echo $${name} | tr - _)_pb2_grpc.py $${f%/*}/protobuf/$$(echo $${name%/*}/ | tr - _); \
  		done; \
  		for d in `find $${f%/*}/protobuf -type d`; do \
  			touch $${d}/__init__.py; \
  		done; \
  	done && \
  	rm -rf protobuf/ && \
  	echo "Done!"

run_server:
	python3 identification_service/identification_service.py
